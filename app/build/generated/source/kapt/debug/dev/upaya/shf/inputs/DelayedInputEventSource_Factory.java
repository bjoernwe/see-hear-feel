// Generated by Dagger (https://dagger.dev).
package dev.upaya.shf.inputs;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import dev.upaya.shf.inputs.events.IInputEventSource;
import javax.inject.Provider;
import kotlinx.coroutines.CoroutineDispatcher;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dev.upaya.shf.inputs.DefaultDispatcher")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DelayedInputEventSource_Factory implements Factory<DelayedInputEventSource> {
  private final Provider<IInputEventSource> inputEventSourceProvider;

  private final Provider<CoroutineDispatcher> dispatcherProvider;

  public DelayedInputEventSource_Factory(Provider<IInputEventSource> inputEventSourceProvider,
      Provider<CoroutineDispatcher> dispatcherProvider) {
    this.inputEventSourceProvider = inputEventSourceProvider;
    this.dispatcherProvider = dispatcherProvider;
  }

  @Override
  public DelayedInputEventSource get() {
    return newInstance(inputEventSourceProvider.get(), dispatcherProvider.get());
  }

  public static DelayedInputEventSource_Factory create(
      Provider<IInputEventSource> inputEventSourceProvider,
      Provider<CoroutineDispatcher> dispatcherProvider) {
    return new DelayedInputEventSource_Factory(inputEventSourceProvider, dispatcherProvider);
  }

  public static DelayedInputEventSource newInstance(IInputEventSource inputEventSource,
      CoroutineDispatcher dispatcher) {
    return new DelayedInputEventSource(inputEventSource, dispatcher);
  }
}
